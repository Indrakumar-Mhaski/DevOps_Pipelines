pipeline {
    agent {label 'Test'}
    // agent any
    environment {
        // Set your environment variables here
        DEPLOY_PATH = '/path/to/tomcat/webapps/' // Adjust this to your Tomcat's webapps directory
        CATALINA_HOME = '/path/to/tomcat' // Adjust this to your Tomcat home directory
        TOMCAT_USER = 'admin' // Your Tomcat user if authentication is needed
        TOMCAT_PASSWORD = 'admin' // Your Tomcat password if authentication is needed
        WAR_FILE = 'target/CalculatorApp-1.0-SNAPSHOT.war' // Adjust this to match your WAR file name

        EC2_IP = '13.211.204.94'
        SSH_USER = 'ubuntu'
        TOMCAT_WEBAPPS_DIR = '/var/lib/tomcat9/webapps/' // Adjust according to Tomcat installation
        SSH_KEY_PATH = '~/.ssh/id_rsa' // Jenkins server or agent's private key
        
    }
    
    stages {
        stage('Checkout') {
            steps {
                // Pull the code from GitHub repository
                git branch: 'main', url: 'https://github.com/Indrakumar-Mhaski/JavaCalculatorApp.git'
            }
        }
        
        stage('Build') {
            steps {
                // Build the project using Maven
                sh 'mvn clean package'
            }
        }
        
        stage('Deploy to Tomcat') {
            steps {
                // Deploy the WAR file to Tomcat webapps directory
                script {
                    
                    // Copy WAR file to Tomcat webapps
                    scp -i ${SSH_KEY_PATH} -o StrictHostKeyChecking=no ${WAR_FILE} ${SSH_USER}@${EC2_IP}:${TOMCAT_WEBAPPS_DIR}
                    
                    
                    // SSH into EC2 and restart Tomcat to deploy the new WAR
                    sh """
                    ssh -i ${SSH_KEY_PATH} -o StrictHostKeyChecking=no ${SSH_USER}@${EC2_IP} 'sudo systemctl restart tomcat'
                    """
                }
            }
        }
    }
    
    post {
        success {
            echo 'Application deployed successfully!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}
